name: CI

on:
  push:
    branches:
      - main
  pull_request:

env:
  # https://doc.rust-lang.org/cargo/reference/profiles.html#release
  RUSTFLAGS: -Coverflow-checks=y -Cdebug-assertions=y
  # https://doc.rust-lang.org/cargo/reference/profiles.html#incremental
  CARGO_INCREMENTAL: 1
  # https://nexte.st/book/pre-built-binaries.html#using-nextest-in-github-actions
  CARGO_TERM_COLOR: always

jobs:
  run_checks:
    strategy:
      matrix:
        rust_toolchain_version: ["1.79", "1.80", "1.81", "1.82"]
        # Follow ocamlgen-test.opam requirements
        # FIXME: currently not available for 5.0.0.
        # It might be related to boxroot dependency, and we would need to bump
        # up the ocaml-rs dependency
        ocaml_version: [4.14]
        os: ["macos-latest", "ubuntu-latest"]
    runs-on: ${{ matrix.os }}
    name: Run some basic checks and tests
    steps:
      #
      # Setup
      #

      - name: Checkout PR
        uses: actions/checkout@v4

      # as action-rs does not seem to be maintained anymore, building from
      # scratch the environment using rustup
      - name: Setup Rust toolchain ${{ matrix.rust_toolchain_version }}
        run:
          |
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
            echo "$HOME/.cargo/bin" >> $GITHUB_PATH
            $HOME/.cargo/bin/rustup toolchain install ${{ matrix.rust_toolchain_version }} --profile default
            $HOME/.cargo/bin/rustup default ${{ matrix.rust_toolchain_version }}
            # overwriting default rust-toolchain
            echo ${{ matrix.rust_toolchain_version }} > rust-toolchain

      - name: Setup OCaml ${{ matrix.ocaml_version }}
        uses: ocaml/setup-ocaml@v3
        with:
          ocaml-compiler: ${{ matrix.ocaml_version }}
          # https://github.com/ocaml/setup-ocaml/issues/211#issuecomment-1058882386
          # disable-cache: true

      - name: Setup OCaml dependencies
        run: |
          eval $(opam env)
          make setup-ocaml-deps

      - name: List OCaml and Rust versions
        run: |
          eval $(opam env)
          echo "OCaml version $(ocamlc --version) (location = $(which ocamlc))"
          echo "OPAM version $(opam --version) (location = $(which opam))"
          echo "Rust version $(rustc --version) (location = $(which rustc))"

      #
      # Coding guidelines
      #

      - name: Enforce Rust and OCaml formatting
        run: |
            eval $(opam env)
            cargo install cargo-sort
            make check-format

      - name: Lint (clippy)
        run: |
            eval $(opam env)
            make lint

      #
      # OCaml (tests)
      #

      - name: Build and run tests
        run: |
          eval $(opam env)
          dune build
          dune runtest

      - name: Check that up-to-date bindings are checked in
        run: |
          git diff --exit-code ":(exclude)rust-toolchain"
