;; generate static lib from rust code

(rule
 (deps
  ; this lib
  ./Cargo.toml
  ./src/lib.rs
  (source_tree ./.cargo)
  ; ocaml-gen
  (source_tree ../ocaml-gen))
 (targets libocamlgen_test_stubs.a dllocamlgen_test_stubs.so)
 (action
  (progn
   (run rm -rf ./target)
   (run rm -rf ./Cargo.lock)
   (run sh -c "touch dllocamlgen_test_stubs.so")
   (run cargo build --release)
   (run sh -c "cp ./target/release/libocamlgen_test_stubs.a ."))))

;; generate the OCaml bindings from rust code

(rule
 (target bindings.ml)
 (deps
  ; this lib
  ./Cargo.toml
  ./src/lib.rs
  (source_tree ./.cargo)
  ; this bin
  ./src/main.rs
  ; ocaml-gen
  (source_tree ../ocaml-gen))
 (action
  (progn
   (run rm -rf ./target)
   (run rm -rf ./Cargo.lock)
   (with-stdout-to
    bindings.ml
    (run cargo run)))))

;; test library

(library
 (name ocamlgen_test_lib)
 (public_name ocamlgen-test)
 (modules lib bindings)
 ; Link the Rust library
 (foreign_archives ocamlgen_test_stubs)
 (c_library_flags :standard))

;; test executable (links to the library)

(executable
 (name ocamlgen_test)
 (modules ocamlgen_test)
 (libraries ocamlgen_test_lib))

;; rule for running the tests (runs the executable)

(rule
 (alias runtest)
 (action
  (run ./ocamlgen_test.exe)))
