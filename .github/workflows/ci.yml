name: CI

on:
  push:
    branches:
      - main
  pull_request:

env:
  # https://doc.rust-lang.org/cargo/reference/profiles.html#release
  RUSTFLAGS: -Coverflow-checks=y -Cdebug-assertions=y
  # https://doc.rust-lang.org/cargo/reference/profiles.html#incremental
  CARGO_INCREMENTAL: 1
  # https://nexte.st/book/pre-built-binaries.html#using-nextest-in-github-actions
  CARGO_TERM_COLOR: always

jobs:
  run_checks:
    strategy:
      matrix:
        rust_toolchain_version: [1.67, 1.68, 1.69]

    runs-on: ubuntu-latest
    name: Run some basic checks and tests
    steps:
      #
      # Setup
      #

      - name: Checkout PR
        uses: actions/checkout@v2

      - name: Set up cargo/rust ${{ matrix.rust_toolchain_version }}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust_toolchain_version }}
          components: rustfmt, clippy

      # https://github.com/Swatinem/rust-cache
      - name: Cache Rust stuff
        uses: Swatinem/rust-cache@v1

      - name: Setup OCaml (because of ocaml-gen)
        run: |
          sudo apt update
          sudo apt install -y opam
          opam init -y
          opam install dune
          eval $(opam env)

      # https://nexte.st/book/pre-built-binaries.html#using-nextest-in-github-actions
      - name: Install latest nextest release
        uses: taiki-e/install-action@nextest

      #
      # Tests
      #

      - name: Test with latest nextest release (faster than cargo test)
        uses: actions-rs/cargo@v1
        with:
          command: nextest
          args: run --all-features --release

      #
      # Coding guidelines
      #

      - name: Enforce formating
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

      - name: Lint (clippy)
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features -- -D warnings

      #
      # OCaml (tests)
      #

      - name: Build and run tests
        run: |
          eval $(opam env)
          dune build

      - name: Check that up-to-date bindings are checked in
        run: |
          git diff --exit-code
